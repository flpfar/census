continue
exit
a = con.exec("SELECT * FROM states WHERE initials = 'SP' LIMIT 1").first
a = con.exec("SELECT * FROM states WHERE initials = 'sp' LIMIT 1").first
a = con.exec("SELECT * FROM states WHERE initials = 'lalala' LIMIT 1").first
a = con.exec("SELECT * FROM states WHERE initials == 'lalala' LIMIT 1").first
exit
a.first
a = con.exec("SELECT * FROM states WHERE initials = 'SP'")
a.first
a
a = con.exec("SELECT * FROM states WHERE initials = 'sp'")
a.first
a = con.exec("SELECT * FROM states")
a = con.exec("SELECT * FROM states)
a = con.exec("SELECT * FROM states WHERE initials == 'sp'")
a = con.exec('SELECT * FROM states WHERE initials == "sp"')
a = con.exec('SELECT * FROM states WHERE initials == "sp")
con = DBConnection.instance
continue
exit
a.each { |i| puts i['initials'] }
a.each do { |i| puts i['initials'] }
a = con.exec('SELECT * from states')
con  = PG::Connection.new(host: 'db', user: 'postgres', password: 'password')
exit
a.first
a = con2.exec("SELECT * FROM states")
_.first
con2.exec("SELECT * FROM states")
con2.exec("SELECT * FROM states;")
con2.exec('SELECT * FROM states;')
con2 = DBConnection.instance
exit
continue
exit
name
initials
id
exit
input.to_i
MENU_OPTIONS[4]
input.to_sym
input.to_s
input
exit
result
exit
names_arr
exit
rows << [123, 123]
rows << v.unshift(k)
v.unshift(k)
p v
k
puts v
v
k
exit
my_decades[11]
my_decades[11].push(1234)
my_decades[11]
my_decades[11] << 1234
my_decades[11] << 123
my_decades
my_decades[123] = 123
exit
decades[k]
decades
decades[k] << v
exit
decades[k]
decades
decades[k].push v
decades.empty?
decades.empty
decades
decades[k] << v
exit
p decades.empty?
p decades
decades
decades[k] << 700
decades[k] << v
puts v
v
k
